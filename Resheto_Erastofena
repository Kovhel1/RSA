#Описание взято с: http://py-algorithm.blogspot.com/2011/04/blog-post_09.html
#РЕШЕТО́ ЭРАТОСФЕ́НА — АЛГОРИТМ НАХОЖДЕНИЯ ВСЕХ ПРОСТЫХ ЧИСЕЛ ДО НЕКОТОРОГО ЦЕЛОГО ЧИСЛА N, КОТОРЫЙ ПРИПИСЫВАЮТ ДРЕВНЕГРЕЧЕСКОМУ МАТЕМАТИКУ ЭРАТОСФЕНУ КИРЕНСКОМУ.
#Для нахождения всех простых чисел не больше заданного числа n, следуя методу Эратосфена, нужно выполнить следующие шаги:
#   1. Выписать подряд все целые числа от двух до n (2, 3, 4, …, n).
#   2. Пусть переменная p изначально равна двум — первому простому числу.
#   3. Вычеркнуть из списка все числа от 2p до n, делящиеся на p (то есть, числа 2p, 3p, 4p, …)
#   4. Найти первое не вычеркнутое число, большее чем p, и присвоить значению переменной p это число.
#   5. Повторять шаги 3 и 4 до тех пор, пока p не станет больше, чем n
#   6. Все не вычеркнутые числа в списке — простые числа.



max_number = int(input("max_number = "))
def Resheto_Erastofena(max_number):
    all_numbers_to_max = list()
    for i in range(2, max_number):
        all_numbers_to_max.append(i)
    mass_len = max_number - 2
    print("all_numbers_to_max = ", all_numbers_to_max)
    
    for i in range(2, max_number):
        for j  in range(0, mass_len):
            if all_numbers_to_max[j] == i:
                for l in range(j+1, mass_len):
                    if all_numbers_to_max[l]%i == 0:
                        all_numbers_to_max[l] = 1
    
    erasto_list = list()
    for i in range(0, mass_len):
        if all_numbers_to_max[i]!=1:
            erasto_list.append(all_numbers_to_max[i])
            mass_len-=1
    print("erasto_list ", erasto_list)
    
    del all_numbers_to_max
    return erasto_list
    
print(Resheto_Erastofena(max_number))
